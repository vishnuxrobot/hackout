html,
body {
  margin: 0;
  padding: 0;

   background-color: #020507;
}
 .bdy{
 	display: none;
 }
.top::-webkit-scrollbar {
    display: none;
}

/* Hide scrollbar for IE and Edge */
.top {
    -ms-overflow-style: none;
}
#can {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  z-index: 0;
}

.center {
	padding-top: 200px;
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;

}
.joinad{
	margin-left: 31%;
  margin-right: auto;
  text-align: center;
}

/*HAck*/


#wrapper {
  text-align: center;
}

.sub {
  color: #64dcdc;
  letter-spacing: 1em;
  font-size: 1.5em;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: #42E849;
  font-size: 4em;
  letter-spacing: .5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #42E849;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #42E849, 2px 2px #42E849;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(23px, 9999px, 15px, 0);
    transform: skew(0.08deg);
  }
  5% {
    clip: rect(23px, 9999px, 6px, 0);
    transform: skew(0.88deg);
  }
  10% {
    clip: rect(91px, 9999px, 34px, 0);
    transform: skew(0.88deg);
  }
  15% {
    clip: rect(79px, 9999px, 49px, 0);
    transform: skew(0.89deg);
  }
  20% {
    clip: rect(42px, 9999px, 100px, 0);
    transform: skew(0.49deg);
  }
  25% {
    clip: rect(64px, 9999px, 45px, 0);
    transform: skew(0.84deg);
  }
  30% {
    clip: rect(4px, 9999px, 91px, 0);
    transform: skew(0.77deg);
  }
  35% {
    clip: rect(4px, 9999px, 87px, 0);
    transform: skew(0.99deg);
  }
  40% {
    clip: rect(45px, 9999px, 99px, 0);
    transform: skew(0.74deg);
  }
  45% {
    clip: rect(96px, 9999px, 33px, 0);
    transform: skew(1deg);
  }
  50% {
    clip: rect(9px, 9999px, 23px, 0);
    transform: skew(0.68deg);
  }
  55% {
    clip: rect(19px, 9999px, 77px, 0);
    transform: skew(0.46deg);
  }
  60% {
    clip: rect(83px, 9999px, 52px, 0);
    transform: skew(0.69deg);
  }
  65% {
    clip: rect(72px, 9999px, 30px, 0);
    transform: skew(0.14deg);
  }
  70% {
    clip: rect(16px, 9999px, 13px, 0);
    transform: skew(0.88deg);
  }
  75% {
    clip: rect(98px, 9999px, 13px, 0);
    transform: skew(0.8deg);
  }
  80% {
    clip: rect(6px, 9999px, 14px, 0);
    transform: skew(0.47deg);
  }
  85% {
    clip: rect(99px, 9999px, 43px, 0);
    transform: skew(0.34deg);
  }
  90% {
    clip: rect(98px, 9999px, 94px, 0);
    transform: skew(0.81deg);
  }
  95% {
    clip: rect(32px, 9999px, 67px, 0);
    transform: skew(0.79deg);
  }
  100% {
    clip: rect(32px, 9999px, 30px, 0);
    transform: skew(0.03deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(11px, 9999px, 35px, 0);
    transform: skew(0.27deg);
  }
  5% {
    clip: rect(62px, 9999px, 80px, 0);
    transform: skew(0.43deg);
  }
  10% {
    clip: rect(11px, 9999px, 67px, 0);
    transform: skew(0.9deg);
  }
  15% {
    clip: rect(34px, 9999px, 71px, 0);
    transform: skew(0.39deg);
  }
  20% {
    clip: rect(5px, 9999px, 74px, 0);
    transform: skew(0.12deg);
  }
  25% {
    clip: rect(91px, 9999px, 38px, 0);
    transform: skew(0.15deg);
  }
  30% {
    clip: rect(12px, 9999px, 42px, 0);
    transform: skew(0.69deg);
  }
  35% {
    clip: rect(37px, 9999px, 5px, 0);
    transform: skew(0.88deg);
  }
  40% {
    clip: rect(40px, 9999px, 44px, 0);
    transform: skew(0.03deg);
  }
  45% {
    clip: rect(5px, 9999px, 66px, 0);
    transform: skew(0.95deg);
  }
  50% {
    clip: rect(95px, 9999px, 81px, 0);
    transform: skew(0.82deg);
  }
  55% {
    clip: rect(26px, 9999px, 41px, 0);
    transform: skew(0.67deg);
  }
  60% {
    clip: rect(26px, 9999px, 15px, 0);
    transform: skew(0.89deg);
  }
  65% {
    clip: rect(53px, 9999px, 95px, 0);
    transform: skew(0.12deg);
  }
  70% {
    clip: rect(61px, 9999px, 72px, 0);
    transform: skew(0.26deg);
  }
  75% {
    clip: rect(4px, 9999px, 57px, 0);
    transform: skew(0.45deg);
  }
  80% {
    clip: rect(89px, 9999px, 22px, 0);
    transform: skew(0.12deg);
  }
  85% {
    clip: rect(56px, 9999px, 32px, 0);
    transform: skew(0.19deg);
  }
  90% {
    clip: rect(45px, 9999px, 51px, 0);
    transform: skew(0.4deg);
  }
  95% {
    clip: rect(100px, 9999px, 70px, 0);
    transform: skew(0.14deg);
  }
  100% {
    clip: rect(32px, 9999px, 85px, 0);
    transform: skew(0.15deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(0deg);
  }
  10% {
    transform: skew(0deg);
  }
  20% {
    transform: skew(0deg);
  }
  30% {
    transform: skew(3deg);
  }
  40% {
    transform: skew(3deg);
  }
  50% {
    transform: skew(0deg);
  }
  60% {
    transform: skew(-2deg);
  }
  70% {
    transform: skew(-2deg);
  }
  80% {
    transform: skew(5deg);
  }
  90% {
    transform: skew(0deg);
  }
  100% {
    transform: skew(3deg);
  }
}



pre {
  padding: 0;
  margin: 0;
}

.load {
  margin: 0 auto;
  min-height: 100%;
  width: 100%;
  background: black;
}

.term {
  font-family: monospace;
  color: #42E849;
  opacity: 0.8;
  font-size: 2em;
  overflow-y: auto;
  overflow-x: hidden;
  padding-top: 10px;
  padding-left: 20px;
   background: black;
}

.term:after {
  content: "_";
  opacity: 1;
  animation: cursor 1s infinite;
}

@keyframes cursor {
  0% {
    opacity: 0;
  }
  40% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}


.text { 
  position: relative;
  display: inline-block;
  font-family: Monaco, Arial, Helvetica, sans-serif;
  line-height: 24px;
  font-size: 24px;
  color: white;
  min-width: 360px;
}

.text::after {
  content: "";
  position: absolute;
  top: 0;
  right: -15px;
  /* Remove display: inline-block if not required to be on the same line as text etc */
  display: inline-block;
  background-color: #606060;
  vertical-align: top;
  width: 10px;
  /* Set height to the line height of .text */
  height: 24px;
  /* 
  Animation paramaters:
  blink = animation-name, 
  1s = animation-duration, 
  step-end = animation-timing-function,
  infinite = animation-iteration-count
  */
  -webkit-animation: blink 1s step-end infinite;
  animation: blink 1s step-end infinite;
}

@-webkit-keyframes blink {
  0% { opacity: 1.0; }
  50% { opacity: 0.0; }
  100% { opacity: 1.0; }
}

@keyframes blink {
  0% { opacity: 1.0; }
  50% { opacity: 0.0; }
  100% { opacity: 1.0; }
}


@media only screen and (max-device-width: 720px){
	#can{
		display: block;
	}
	.center {
	padding-top: 280px;
  width: 50%;
}
.glitch{
	font-size: 2em;
}
.sub {
  color: #64dcdc;
  letter-spacing: 0.5em;
}
.text{
	font-size: 12px;
}
.joinad{
	margin-left: auto;
 
}
}


